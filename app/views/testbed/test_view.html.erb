<div class="ux-testbed-container ux-testbed-container-<%= @view_name %>">
</div>

<%= content_for :javascript do -%>
  <%= javascript_tag do %>

data = {
  topics: [
    { "id": 1,
      "name": "Conversations",
      "unread_conversations": 3
    },
    { "id": 4,
      "name": "Structural",
      "unread_conversations": 0
    },
    { "id": 6,
      "name": "Chit Chat",
      "unread_conversations": 0
    },
    { "id": 2,
      "name": "Water Cooler Dev",
      "unread_conversations": 2
    },
    { "id": 9,
      "name": "Testing stuff",
      "unread_conversations": 0
    }
  ],
  conversations: [
    { "id": 3,
      "title": "Talk about stuff",
      "most_recent_message": 1734512345,
      "most_recent_viewed": 1722345134,
      "participants": [
        { "id": 2,
          "name": "Paul Revere",
          "last_updated_time": 1235123423,
        },
        { "id": 4,
          "name": "Thomas Paine",
          "last_updated_time": 1613423423,
        }
      ]
    },
    { "id": 2,
      "title": "Meeting Notes",
      "most_recent_message": 1734512325,
      "most_recent_viewed": 1742345134,
      "participants": [
        { "id": 7,
          "name": "Ethan Allen",
          "last_updated_time": 1235123123,
        },
        { "id": 4,
          "name": "Thomas Paine",
          "last_updated_time": 1613423423,
        }
      ]
    },
    { "id": 5,
      "title": "What's for lunch?",
      "most_recent_message": 1734512545,
      "most_recent_viewed": 1722345934,
      "participants": [
        { "id": 1,
          "name": "George Washington",
          "last_updated_time": 1235123523,
        },
        { "id": 15,
          "name": "John Adams",
          "last_updated_time": 1613423923,
        }
      ]
    }
  ]
}

var name = '<%= @view_name %>';
var view;
switch(name) {
  case 'conversation':
    var model = new Structural.Models.Conversation(data.conversations[0]);
    view = new Structural.Views.Conversation({model: model});
    break;
  case 'conversation-list':
    var collection = new Structural.Collections.Conversations(data.conversations);
    view = new Structural.Views.Conversations({collection: collection});
    break;
  case 'conversation-container':
    var collection = new Structural.Collections.Conversations(data.conversations);
    view = new Structural.Views.ConversationContainer({conversations: collection});
    break;
  default:
    console.log('Unknown view name!!');
    break;
}
view.render();
$('.ux-testbed-container').html(view.el);

  <% end %>
<% end %>
